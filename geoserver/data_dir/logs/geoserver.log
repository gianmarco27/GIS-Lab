2020-01-04 20:00:53,461 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-01-04 20:00:53,540 INFO [org.geoserver] - Loading catalog...
2020-01-04 20:00:53,618 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-01-04 20:00:53,618 INFO [org.geoserver] - Loaded style 'capitals'
2020-01-04 20:00:53,618 INFO [org.geoserver] - Loaded style 'dem'
2020-01-04 20:00:53,618 INFO [org.geoserver] - Loaded style 'burg'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'green'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'generic'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'grass'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'point'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'poi'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'polygon'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'pophatch'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'line'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'population'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'rain'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'restricted'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'raster'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-01-04 20:00:53,634 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-01-04 20:00:53,649 INFO [org.geoserver] - Loaded default workspace cite
2020-01-04 20:00:53,665 INFO [org.geoserver] - Loaded workspace 'cite'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'sf'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'sde'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-01-04 20:00:53,680 INFO [org.geoserver] - Loaded workspace 'topp'
2020-01-04 20:00:53,993 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-01-04 20:00:54,977 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-01-04 20:00:54,993 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-01-04 20:00:54,993 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-01-04 20:00:55,009 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-01-04 20:00:55,009 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-01-04 20:00:55,009 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-01-04 20:00:55,227 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-01-04 20:00:55,243 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-01-04 20:00:55,243 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-01-04 20:00:55,243 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-01-04 20:00:55,259 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-01-04 20:00:55,259 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-01-04 20:00:55,290 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-01-04 20:00:55,290 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-01-04 20:00:55,430 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded layer 'archsites'
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded layer 'roads'
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-01-04 20:00:55,446 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-01-04 20:00:55,462 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-01-04 20:00:55,462 INFO [org.geoserver] - Loaded layer 'restricted'
2020-01-04 20:00:55,462 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-01-04 20:00:55,462 INFO [org.geoserver] - Loaded layer 'streams'
2020-01-04 20:00:55,462 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-01-04 20:00:55,477 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-01-04 20:00:55,477 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-01-04 20:00:55,477 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-01-04 20:00:55,477 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-01-04 20:00:55,493 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-01-04 20:00:55,493 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-01-04 20:00:55,493 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-01-04 20:00:55,493 INFO [org.geoserver] - Loaded layer 'poi'
2020-01-04 20:00:55,493 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-01-04 20:00:55,508 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-01-04 20:00:55,508 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-01-04 20:00:55,508 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-01-04 20:00:55,508 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-01-04 20:00:55,524 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-01-04 20:00:55,524 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-01-04 20:00:55,524 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-01-04 20:00:55,524 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-01-04 20:00:55,524 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-01-04 20:00:55,540 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-01-04 20:00:55,540 INFO [org.geoserver] - Loaded layer 'states'
2020-01-04 20:00:55,555 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-01-04 20:00:55,555 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-01-04 20:00:55,555 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-01-04 20:00:55,555 INFO [org.geoserver] - Read catalog in 2.016 s
2020-01-04 20:00:55,650 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--53e3b90e:16f71ee88e2:-8000', enabled
2020-01-04 20:00:55,665 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-01-04 20:00:55,681 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-01-04 20:00:55,696 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-01-04 20:00:55,712 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:00:55,775 WARN [config.GeoserverXMLResourceProvider] - Found no configuration file in config directory, will create one at 'gwc/geowebcache.xml' from template jar:file:/C:/Users/gianm/OneDrive%20-%20Politecnico%20di%20Milano/Desktop/PoliMi/Magistrale/II%20Anno/Primo%20Semestre/Geographic%20Information%20System/Lab/GIS-Lab/geoserver/webapps/geoserver/WEB-INF/lib/gwc-core-1.16.1.jar!/geowebcache_empty.xml
2020-01-04 20:00:55,790 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:00:55,790 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:00:55,821 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:00:55,821 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: impossibile trovare la dichiarazione dell'elemento "gwcConfiguration".
2020-01-04 20:00:55,821 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-01-04 20:00:55,837 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:00:55,915 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-01-04 20:00:55,915 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-01-04 20:00:55,962 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-01-04 20:00:55,962 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-01-04 20:00:55,962 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-01-04 20:00:55,962 INFO [gwc.layer] - Loaded 0 tile layers in 1.693 ms
2020-01-04 20:00:55,978 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-01-04 20:00:55,978 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:00:55,978 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir, using it as the default prefix. ***
2020-01-04 20:00:55,978 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:00:56,040 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-01-04 20:00:57,165 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:00:57,165 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:00:57,181 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:00:57,212 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:00:57,228 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-01-04 20:00:57,228 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-01-04 20:00:57,243 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2020-01-04 20:00:57,306 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-01-04 20:00:57,556 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-01-04 20:00:57,571 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-01-04 20:00:57,571 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-01-04 20:00:57,696 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-01-04 20:00:57,696 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-01-04 20:01:01,213 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-01-04 20:01:06,917 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-01-04 20:01:06,917 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-01-04 20:01:07,729 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-01-04 20:01:07,745 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-01-04 20:06:29,337 WARN [geoserver.security] - Failed login, user user from 0:0:0:0:0:0:0:1
2020-01-04 20:06:29,338 INFO [geoserver.security] - Brute force attack prevention, delaying login for 3472ms
2020-01-04 20:06:29,393 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-01-04 20:06:29,394 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-01-04 20:06:29,399 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-01-04 20:06:29,403 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-01-04 20:06:29,404 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-01-04 20:06:29,410 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-01-04 20:06:29,410 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-01-04 20:06:29,415 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-01-04 20:06:29,417 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-01-04 20:06:29,417 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-01-04 20:06:29,418 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-01-04 20:07:07,223 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-01-04 20:07:07,285 INFO [org.geoserver] - Loading catalog...
2020-01-04 20:07:07,353 INFO [org.geoserver] - Loaded style 'burg'
2020-01-04 20:07:07,361 INFO [org.geoserver] - Loaded style 'capitals'
2020-01-04 20:07:07,363 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-01-04 20:07:07,363 INFO [org.geoserver] - Loaded style 'dem'
2020-01-04 20:07:07,364 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-01-04 20:07:07,365 INFO [org.geoserver] - Loaded style 'generic'
2020-01-04 20:07:07,366 INFO [org.geoserver] - Loaded style 'grass'
2020-01-04 20:07:07,367 INFO [org.geoserver] - Loaded style 'green'
2020-01-04 20:07:07,368 INFO [org.geoserver] - Loaded style 'line'
2020-01-04 20:07:07,368 INFO [org.geoserver] - Loaded style 'poi'
2020-01-04 20:07:07,369 INFO [org.geoserver] - Loaded style 'polygon'
2020-01-04 20:07:07,370 INFO [org.geoserver] - Loaded style 'point'
2020-01-04 20:07:07,371 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-01-04 20:07:07,372 INFO [org.geoserver] - Loaded style 'pophatch'
2020-01-04 20:07:07,373 INFO [org.geoserver] - Loaded style 'population'
2020-01-04 20:07:07,375 INFO [org.geoserver] - Loaded style 'rain'
2020-01-04 20:07:07,376 INFO [org.geoserver] - Loaded style 'raster'
2020-01-04 20:07:07,378 INFO [org.geoserver] - Loaded style 'restricted'
2020-01-04 20:07:07,379 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-01-04 20:07:07,380 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-01-04 20:07:07,381 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-01-04 20:07:07,382 INFO [org.geoserver] - Loaded default workspace cite
2020-01-04 20:07:07,399 INFO [org.geoserver] - Loaded workspace 'sde'
2020-01-04 20:07:07,404 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-01-04 20:07:07,409 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-01-04 20:07:07,411 INFO [org.geoserver] - Loaded workspace 'cite'
2020-01-04 20:07:07,413 INFO [org.geoserver] - Loaded workspace 'sf'
2020-01-04 20:07:07,415 INFO [org.geoserver] - Loaded workspace 'topp'
2020-01-04 20:07:07,417 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-01-04 20:07:07,726 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-01-04 20:07:08,929 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-01-04 20:07:08,954 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-01-04 20:07:08,959 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-01-04 20:07:08,967 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-01-04 20:07:08,971 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-01-04 20:07:08,973 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-01-04 20:07:09,314 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-01-04 20:07:09,319 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-01-04 20:07:09,323 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-01-04 20:07:09,331 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-01-04 20:07:09,335 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-01-04 20:07:09,522 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-01-04 20:07:09,560 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-01-04 20:07:09,570 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-01-04 20:07:09,577 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-01-04 20:07:09,578 INFO [org.geoserver] - Loaded layer 'streams'
2020-01-04 20:07:09,582 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-01-04 20:07:09,585 INFO [org.geoserver] - Loaded layer 'restricted'
2020-01-04 20:07:09,595 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-01-04 20:07:09,600 INFO [org.geoserver] - Loaded layer 'roads'
2020-01-04 20:07:09,602 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-01-04 20:07:09,609 INFO [org.geoserver] - Loaded layer 'archsites'
2020-01-04 20:07:09,611 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-01-04 20:07:09,620 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-01-04 20:07:09,624 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-01-04 20:07:09,633 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-01-04 20:07:09,643 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-01-04 20:07:09,648 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-01-04 20:07:09,650 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-01-04 20:07:09,652 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-01-04 20:07:09,657 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-01-04 20:07:09,658 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-01-04 20:07:09,664 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-01-04 20:07:09,666 INFO [org.geoserver] - Loaded layer 'poi'
2020-01-04 20:07:09,678 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-01-04 20:07:09,681 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-01-04 20:07:09,686 INFO [org.geoserver] - Loaded layer 'states'
2020-01-04 20:07:09,692 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-01-04 20:07:09,704 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-01-04 20:07:09,710 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-01-04 20:07:09,713 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-01-04 20:07:09,716 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-01-04 20:07:09,718 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-01-04 20:07:09,719 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-01-04 20:07:09,722 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-01-04 20:07:09,725 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-01-04 20:07:09,745 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-01-04 20:07:09,749 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-01-04 20:07:09,751 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-01-04 20:07:09,754 INFO [org.geoserver] - Read catalog in 2.464 s
2020-01-04 20:07:09,902 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--7dcfe435:16f71f43ece:-8000', enabled
2020-01-04 20:07:09,915 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-01-04 20:07:09,935 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-01-04 20:07:09,957 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-01-04 20:07:09,996 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:07:10,076 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:07:10,078 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:07:10,079 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:07:10,133 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:07:10,133 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: impossibile trovare la dichiarazione dell'elemento "gwcConfiguration".
2020-01-04 20:07:10,136 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-01-04 20:07:10,136 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:07:10,253 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-01-04 20:07:10,259 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-01-04 20:07:10,326 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-01-04 20:07:10,326 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-01-04 20:07:10,327 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-01-04 20:07:10,397 INFO [gwc.layer] - Loaded 22 tile layers in 69.10 ms
2020-01-04 20:07:10,409 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-01-04 20:07:10,420 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:07:10,421 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir, using it as the default prefix. ***
2020-01-04 20:07:10,421 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:07:10,499 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-01-04 20:07:10,581 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:07:10,600 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:07:10,605 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:07:10,618 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:07:10,620 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-01-04 20:07:10,621 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-01-04 20:07:10,635 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2020-01-04 20:07:10,683 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-01-04 20:07:10,865 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-01-04 20:07:10,876 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-01-04 20:07:10,883 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-01-04 20:07:10,981 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-01-04 20:07:10,981 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-01-04 20:07:14,506 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-01-04 20:07:20,535 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-01-04 20:07:20,558 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-01-04 20:07:20,776 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-01-04 20:07:20,785 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-01-04 20:09:50,286 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-01-04 20:09:50,289 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-01-04 20:09:50,296 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-01-04 20:09:50,298 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-01-04 20:09:50,299 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-01-04 20:09:50,314 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-01-04 20:09:50,314 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-01-04 20:09:50,322 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-01-04 20:09:50,324 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-01-04 20:09:50,324 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-01-04 20:09:50,326 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-01-04 20:10:22,531 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-01-04 20:10:22,589 INFO [org.geoserver] - Loading catalog...
2020-01-04 20:10:22,655 INFO [org.geoserver] - Loaded style 'burg'
2020-01-04 20:10:22,665 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-01-04 20:10:22,666 INFO [org.geoserver] - Loaded style 'capitals'
2020-01-04 20:10:22,667 INFO [org.geoserver] - Loaded style 'dem'
2020-01-04 20:10:22,668 INFO [org.geoserver] - Loaded style 'generic'
2020-01-04 20:10:22,669 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-01-04 20:10:22,670 INFO [org.geoserver] - Loaded style 'grass'
2020-01-04 20:10:22,671 INFO [org.geoserver] - Loaded style 'green'
2020-01-04 20:10:22,673 INFO [org.geoserver] - Loaded style 'line'
2020-01-04 20:10:22,673 INFO [org.geoserver] - Loaded style 'polygon'
2020-01-04 20:10:22,674 INFO [org.geoserver] - Loaded style 'poi'
2020-01-04 20:10:22,674 INFO [org.geoserver] - Loaded style 'point'
2020-01-04 20:10:22,676 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-01-04 20:10:22,677 INFO [org.geoserver] - Loaded style 'pophatch'
2020-01-04 20:10:22,677 INFO [org.geoserver] - Loaded style 'population'
2020-01-04 20:10:22,680 INFO [org.geoserver] - Loaded style 'rain'
2020-01-04 20:10:22,681 INFO [org.geoserver] - Loaded style 'raster'
2020-01-04 20:10:22,682 INFO [org.geoserver] - Loaded style 'restricted'
2020-01-04 20:10:22,683 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-01-04 20:10:22,685 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-01-04 20:10:22,686 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-01-04 20:10:22,687 INFO [org.geoserver] - Loaded default workspace cite
2020-01-04 20:10:22,704 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-01-04 20:10:22,708 INFO [org.geoserver] - Loaded workspace 'sde'
2020-01-04 20:10:22,711 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-01-04 20:10:22,713 INFO [org.geoserver] - Loaded workspace 'cite'
2020-01-04 20:10:22,715 INFO [org.geoserver] - Loaded workspace 'sf'
2020-01-04 20:10:22,716 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-01-04 20:10:22,718 INFO [org.geoserver] - Loaded workspace 'topp'
2020-01-04 20:10:23,020 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-01-04 20:10:24,260 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-01-04 20:10:24,271 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-01-04 20:10:24,281 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-01-04 20:10:24,287 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-01-04 20:10:24,289 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-01-04 20:10:24,290 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-01-04 20:10:24,293 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-01-04 20:10:24,297 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-01-04 20:10:24,299 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-01-04 20:10:24,304 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-01-04 20:10:24,306 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-01-04 20:10:24,446 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-01-04 20:10:24,469 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-01-04 20:10:24,473 INFO [org.geoserver] - Loaded layer 'archsites'
2020-01-04 20:10:24,476 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-01-04 20:10:24,480 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-01-04 20:10:24,484 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-01-04 20:10:24,486 INFO [org.geoserver] - Loaded layer 'restricted'
2020-01-04 20:10:24,488 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-01-04 20:10:24,498 INFO [org.geoserver] - Loaded layer 'roads'
2020-01-04 20:10:24,502 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-01-04 20:10:24,505 INFO [org.geoserver] - Loaded layer 'streams'
2020-01-04 20:10:24,507 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-01-04 20:10:24,509 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-01-04 20:10:24,515 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-01-04 20:10:24,519 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-01-04 20:10:24,525 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-01-04 20:10:24,528 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-01-04 20:10:24,531 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-01-04 20:10:24,532 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-01-04 20:10:24,536 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-01-04 20:10:24,537 INFO [org.geoserver] - Loaded layer 'poi'
2020-01-04 20:10:24,539 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-01-04 20:10:24,540 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-01-04 20:10:24,551 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-01-04 20:10:24,558 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-01-04 20:10:24,559 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-01-04 20:10:24,561 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-01-04 20:10:24,569 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-01-04 20:10:24,571 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-01-04 20:10:24,572 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-01-04 20:10:24,574 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-01-04 20:10:24,576 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-01-04 20:10:24,580 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-01-04 20:10:24,584 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-01-04 20:10:24,586 INFO [org.geoserver] - Loaded layer 'states'
2020-01-04 20:10:24,598 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-01-04 20:10:24,601 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-01-04 20:10:24,602 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-01-04 20:10:24,605 INFO [org.geoserver] - Read catalog in 2.009 s
2020-01-04 20:10:24,693 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl--2ed93f6f:16f71f737b5:-8000', enabled
2020-01-04 20:10:24,704 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-01-04 20:10:24,718 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-01-04 20:10:24,734 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-01-04 20:10:24,767 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:10:24,849 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:10:24,855 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:10:24,857 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-04 20:10:24,891 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:10:24,896 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: impossibile trovare la dichiarazione dell'elemento "gwcConfiguration".
2020-01-04 20:10:24,898 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-01-04 20:10:24,900 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-04 20:10:24,965 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-01-04 20:10:24,975 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-01-04 20:10:25,018 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-01-04 20:10:25,028 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-01-04 20:10:25,029 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-01-04 20:10:25,063 INFO [gwc.layer] - Loaded 22 tile layers in 33.48 ms
2020-01-04 20:10:25,073 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-01-04 20:10:25,083 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:10:25,084 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir, using it as the default prefix. ***
2020-01-04 20:10:25,085 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-04 20:10:25,155 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-01-04 20:10:25,232 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:10:25,242 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-04 20:10:25,245 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:10:25,279 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-04 20:10:25,281 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-01-04 20:10:25,283 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-01-04 20:10:25,295 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2020-01-04 20:10:25,346 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-01-04 20:10:25,501 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-01-04 20:10:25,522 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-01-04 20:10:25,538 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-01-04 20:10:25,650 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-01-04 20:10:25,657 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-01-04 20:10:28,722 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-01-04 20:10:33,808 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-01-04 20:10:33,818 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-01-04 20:10:33,979 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-01-04 20:10:33,988 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-01-04 20:12:24,711 INFO [geoserver.security] - Strong cryptography is available
2020-01-05 12:50:27,701 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 12:50:27,739 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 13:26:58,321 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:collected_point
2020-01-05 13:27:24,895 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:27:25,579 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514607.0 : 515126.0, 5040132.0 : 5040495.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514607.0,5040132.0,515126.0,5040495.0, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 13:27:25,933 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:27:26,543 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514408.4240115192 : 515324.64154255146, 5039992.74255479 : 5040633.379031566]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514408.4240115192,5039992.74255479,515324.64154255146,5040633.379031566, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=537, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 13:27:29,430 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:27:29,473 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514762.2133810581 : 514862.3972528725, 5040170.430842228 : 5040240.481283849]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 538
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514762.2133810581,5040170.430842228,514862.3972528725,5040240.481283849, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=538, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 13:27:31,070 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:27:31,109 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514503.44722227566 : 515200.3014517842, 5040040.407266714 : 5040527.660810003]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 538
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514503.44722227566,5040040.407266714,515200.3014517842,5040527.660810003, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=538, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 13:27:32,882 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:27:32,959 INFO [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:3333/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[514728.9267483601 : 514820.5703384387, 5040102.561582758 : 5040194.205172836]
 layers: Gis-Lab:collected_point
 styles: point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=Gis-Lab:collected_point, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:32632, BBOX=514728.9267483601,5040102.561582758,514820.5703384387,5040194.205172836, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=Gis-Lab:collected_point, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
2020-01-05 13:29:04,382 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:04,416 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=point, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=point, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=point, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:23,106 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:25,925 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=poi, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=poi, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=poi, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:27,591 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:27,643 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=poly_landmarks, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=poly_landmarks, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=poly_landmarks, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:28,428 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:28,447 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=polygon, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:29,136 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:29,265 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=pophatch, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=pophatch, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=pophatch, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:29,833 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:29,887 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=population, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=population, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=population, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:30,335 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:30,408 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=rain, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=rain, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=rain, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:33,880 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:33,924 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=raster, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=raster, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:34,366 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:34,404 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=restricted, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=restricted, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=restricted, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:34,787 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:34,813 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=simple_roads, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=simple_roads, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=simple_roads, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:35,263 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:35,302 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=simple_streams, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=simple_streams, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=simple_streams, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:35,690 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:35,739 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=tiger_roads, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=tiger_roads, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=tiger_roads, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:41,334 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:41,355 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=line, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=line, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=line, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:41,751 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:41,786 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=green, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=green, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=green, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:42,078 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:42,246 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=grass, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=grass, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=grass, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:42,469 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:42,493 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=giant_polygon, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=giant_polygon, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=giant_polygon, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:42,942 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:42,988 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=generic, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=generic, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=generic, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:43,379 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:43,424 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=dem, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=dem, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=dem, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:43,728 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:43,752 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=cite_lakes, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=cite_lakes, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=cite_lakes, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:44,127 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:44,189 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=capitals, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=capitals, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=capitals, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:29:44,534 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:29:45,437 INFO [geoserver.wms] - 
Request: getLegendGraphic
	BaseUrl = http://localhost:3333/geoserver/
	Env = {}
	Exceptions = SE_XML
	FeatureType = null
	Format = image/png
	Get = false
	Height = 20
	Kvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=burg, WIDTH=20, HEIGHT=20}
	Layers = [null]
	LegendOptions = {}
	Legends = [LegendRequest [layer=, name= styleName=burg, title=null, legendInfo=null]]
	Locale = null
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=burg, WIDTH=20, HEIGHT=20}
	Request = GetLegendGraphic
	RequestCharset = null
	Scale = -1.0
	Strict = false
	Transparent = false
	Version = 1.0.0
	Width = 20
	Wms = org.geoserver.wms.WMS@4ac5d4a8
2020-01-05 13:32:31,165 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:collected_point
2020-01-05 13:32:31,230 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:collected_point
2020-01-05 13:32:33,548 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:33,571 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514607.0 : 515126.0, 5040132.0 : 5040495.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514607.0,5040132.0,515126.0,5040495.0, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 13:32:33,823 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:33,861 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514408.4240115192 : 515324.64154255146, 5039992.74255479 : 5040633.379031566]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514408.4240115192,5039992.74255479,515324.64154255146,5040633.379031566, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=537, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 13:32:35,476 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:35,492 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514607.0 : 515126.0, 5040132.0 : 5040495.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514607.0,5040132.0,515126.0,5040495.0, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 13:32:35,617 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:35,644 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514408.4240115192 : 515324.64154255146, 5039992.74255479 : 5040633.379031566]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514408.4240115192,5039992.74255479,515324.64154255146,5040633.379031566, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=537, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 13:32:48,494 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:48,506 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514607.0 : 515126.0, 5040132.0 : 5040495.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514607.0,5040132.0,515126.0,5040495.0, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 13:32:48,598 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:32:48,699 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514408.4240115192 : 515324.64154255146, 5039992.74255479 : 5040633.379031566]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514408.4240115192,5039992.74255479,515324.64154255146,5040633.379031566, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=537, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 13:33:00,564 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 13:33:00,660 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514408.4240115192 : 515324.64154255146, 5039992.74255479 : 5040633.379031566]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@12b000f0]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514408.4240115192,5039992.74255479,515324.64154255146,5040633.379031566, VERSION=1.1.1, STYLES=capitals, WIDTH=769, SERVICE=WMS, HEIGHT=537, TRANSPARENT=true, LAYERS=Gis-Lab:collected_point}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:05:17,508 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:05:52,971 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:05:53,299 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-01-05 16:05:53,303 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-01-05 16:05:53,304 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-01-05 16:05:53,305 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-01-05 16:05:53,306 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-01-05 16:05:53,320 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-01-05 16:05:53,320 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-01-05 16:05:53,328 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-01-05 16:05:53,330 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-01-05 16:05:53,331 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-01-05 16:05:53,332 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-01-05 16:06:16,494 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-01-05 16:06:16,568 INFO [org.geoserver] - Loading catalog...
2020-01-05 16:06:16,692 INFO [org.geoserver] - Loaded style 'burg'
2020-01-05 16:06:16,693 INFO [org.geoserver] - Loaded style 'dem'
2020-01-05 16:06:16,694 INFO [org.geoserver] - Loaded style 'capitals'
2020-01-05 16:06:16,695 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-01-05 16:06:16,696 INFO [org.geoserver] - Loaded style 'grass'
2020-01-05 16:06:16,697 INFO [org.geoserver] - Loaded style 'generic'
2020-01-05 16:06:16,698 INFO [org.geoserver] - Loaded style 'green'
2020-01-05 16:06:16,699 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-01-05 16:06:16,701 INFO [org.geoserver] - Loaded style 'line'
2020-01-05 16:06:16,703 INFO [org.geoserver] - Loaded style 'point'
2020-01-05 16:06:16,704 INFO [org.geoserver] - Loaded style 'poi'
2020-01-05 16:06:16,705 INFO [org.geoserver] - Loaded style 'polygon'
2020-01-05 16:06:16,706 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-01-05 16:06:16,707 INFO [org.geoserver] - Loaded style 'pophatch'
2020-01-05 16:06:16,708 INFO [org.geoserver] - Loaded style 'population'
2020-01-05 16:06:16,711 INFO [org.geoserver] - Loaded style 'rain'
2020-01-05 16:06:16,713 INFO [org.geoserver] - Loaded style 'raster'
2020-01-05 16:06:16,714 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-01-05 16:06:16,715 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-01-05 16:06:16,716 INFO [org.geoserver] - Loaded style 'restricted'
2020-01-05 16:06:16,717 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-01-05 16:06:16,727 INFO [org.geoserver] - Loaded default workspace Gis-Lab
2020-01-05 16:06:16,761 INFO [org.geoserver] - Loaded workspace 'Gis-Lab'
2020-01-05 16:06:16,767 INFO [org.geoserver] - Loaded workspace 'cite'
2020-01-05 16:06:16,770 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-01-05 16:06:16,772 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-01-05 16:06:16,773 INFO [org.geoserver] - Loaded workspace 'sde'
2020-01-05 16:06:16,775 INFO [org.geoserver] - Loaded workspace 'sf'
2020-01-05 16:06:16,777 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-01-05 16:06:16,779 INFO [org.geoserver] - Loaded workspace 'topp'
2020-01-05 16:06:17,425 INFO [org.geoserver] - Loaded data store 'computedLayers', enabled
2020-01-05 16:06:18,673 INFO [org.geoserver] - Loaded feature type 'collected_point', enabled
2020-01-05 16:06:18,678 INFO [org.geoserver] - Loaded layer 'collected_point'
2020-01-05 16:06:18,708 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-01-05 16:06:18,747 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-01-05 16:06:18,749 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-01-05 16:06:18,750 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-01-05 16:06:18,775 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-01-05 16:06:18,777 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-01-05 16:06:18,779 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-01-05 16:06:18,796 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-01-05 16:06:18,799 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-01-05 16:06:18,801 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-01-05 16:06:18,817 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-01-05 16:06:18,818 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-01-05 16:06:18,860 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-01-05 16:06:18,902 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-01-05 16:06:18,905 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-01-05 16:06:18,910 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-01-05 16:06:18,911 INFO [org.geoserver] - Loaded layer 'roads'
2020-01-05 16:06:18,916 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-01-05 16:06:18,918 INFO [org.geoserver] - Loaded layer 'archsites'
2020-01-05 16:06:18,921 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-01-05 16:06:18,923 INFO [org.geoserver] - Loaded layer 'restricted'
2020-01-05 16:06:18,926 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-01-05 16:06:18,928 INFO [org.geoserver] - Loaded layer 'streams'
2020-01-05 16:06:18,929 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-01-05 16:06:18,955 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-01-05 16:06:18,956 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-01-05 16:06:18,971 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-01-05 16:06:18,998 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-01-05 16:06:18,999 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-01-05 16:06:19,002 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-01-05 16:06:19,003 INFO [org.geoserver] - Loaded layer 'poi'
2020-01-05 16:06:19,006 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-01-05 16:06:19,007 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-01-05 16:06:19,009 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-01-05 16:06:19,011 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-01-05 16:06:19,027 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-01-05 16:06:19,057 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-01-05 16:06:19,061 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-01-05 16:06:19,064 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-01-05 16:06:19,066 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-01-05 16:06:19,068 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-01-05 16:06:19,069 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-01-05 16:06:19,072 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-01-05 16:06:19,074 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-01-05 16:06:19,077 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-01-05 16:06:19,094 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-01-05 16:06:19,095 INFO [org.geoserver] - Loaded layer 'states'
2020-01-05 16:06:19,118 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-01-05 16:06:19,120 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-01-05 16:06:19,122 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-01-05 16:06:19,126 INFO [org.geoserver] - Read catalog in 2.556 s
2020-01-05 16:06:19,241 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-54cb3d6:16f763e1ae9:-8000', enabled
2020-01-05 16:06:19,255 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-01-05 16:06:19,276 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-01-05 16:06:19,298 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-01-05 16:06:19,323 INFO [org.geoserver] - Loaded service 'WCSInfoImpl--2ed93f6f:16f71f737b5:-7ffd', enabled
2020-01-05 16:06:19,337 INFO [org.geoserver] - Loaded service 'WFSInfoImpl--2ed93f6f:16f71f737b5:-7ffc', enabled
2020-01-05 16:06:19,373 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 16:06:19,463 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 16:06:19,464 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 16:06:19,465 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 16:06:19,533 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-05 16:06:19,533 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: impossibile trovare la dichiarazione dell'elemento "gwcConfiguration".
2020-01-05 16:06:19,535 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-01-05 16:06:19,536 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-05 16:06:19,640 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-01-05 16:06:19,642 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-01-05 16:06:19,691 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-01-05 16:06:19,691 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-01-05 16:06:19,691 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-01-05 16:06:19,775 INFO [gwc.layer] - Loaded 23 tile layers in 80.23 ms
2020-01-05 16:06:19,785 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-01-05 16:06:19,792 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-05 16:06:19,793 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir, using it as the default prefix. ***
2020-01-05 16:06:19,793 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-05 16:06:19,857 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-01-05 16:06:19,931 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 16:06:19,942 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 16:06:19,945 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-05 16:06:19,955 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-05 16:06:19,956 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-01-05 16:06:19,957 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-01-05 16:06:19,970 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500,0 MB
2020-01-05 16:06:20,011 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-01-05 16:06:20,231 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-01-05 16:06:20,251 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-01-05 16:06:20,255 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-01-05 16:06:20,386 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-01-05 16:06:20,386 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-01-05 16:06:23,805 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-01-05 16:06:29,246 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-01-05 16:06:29,256 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-01-05 16:06:29,514 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-01-05 16:06:29,514 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-01-05 16:08:05,435 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:08:05,468 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:08:16,847 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:08:16,848 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:09:02,177 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:09:02,178 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:19:18,849 INFO [file.FileBlobStore] - C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc\Gis-Lab_collected_point does not exist or is not writable
2020-01-05 16:21:07,322 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:21:07,323 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:23:59,456 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:23:59,456 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 16:29:32,623 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:points_street_matched
2020-01-05 16:37:24,802 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:niguarda_roads
2020-01-05 16:39:49,383 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:39:50,031 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514600.63422608183 : 515129.71656385745, 5040133.193081597 : 5040507.017378211]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514600.63422608183,5040133.193081597,515129.71656385745,5040507.017378211, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=542, LAYERS=Gis-Lab:niguarda_roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 16:39:50,290 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:39:50,748 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514407.2310199423 : 515323.4485509746, 5039996.918025308 : 5040643.519459969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514407.2310199423,5039996.918025308,515323.4485509746,5040643.519459969, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:40:23,560 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:40:23,609 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514600.63422608183 : 515129.71656385745, 5040133.193081597 : 5040507.017378211]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514600.63422608183,5040133.193081597,515129.71656385745,5040507.017378211, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=542, LAYERS=Gis-Lab:niguarda_roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 16:40:23,742 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:40:23,795 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514407.2310199423 : 515323.4485509746, 5039996.918025308 : 5040643.519459969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=769, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=543, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514407.2310199423,5039996.918025308,515323.4485509746,5040643.519459969, VERSION=1.1.1, SERVICE=WMS, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:44:31,967 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:44:31,972 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer Gis-Lab:niguarda_roads and Gis-Lab:points_street_matched
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1290)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:288)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:90)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1545)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:692)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:255)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.lang.Thread.run(Thread.java:748)
2020-01-05 16:44:55,492 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:44:55,493 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer Gis-Lab:niguarda_roads and Gis-Lab:points_street_matched
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1290)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:288)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:90)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1545)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:692)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:255)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.lang.Thread.run(Thread.java:748)
2020-01-05 16:45:25,971 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:25,971 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:25,971 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:25,974 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:25,983 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:25,983 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514914.25244010985 : 515219.65828378726, 5040418.0440519415 : 5040723.4498956185]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514914.25244010985,5040418.0440519415,515219.65828378726,5040723.4498956185, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[515219.6582837887 : 515525.0641274661, 5040418.0440519415 : 5040723.4498956185]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=515219.6582837887,5040418.0440519415,515525.0641274661,5040723.4498956185, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514608.846596431 : 514914.2524401084, 5040418.0440519415 : 5040723.4498956185]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514608.846596431,5040418.0440519415,514914.2524401084,5040723.4498956185, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514914.25244010985 : 515219.65828378726, 5040112.6382082645 : 5040418.0440519415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514914.25244010985,5040112.6382082645,515219.65828378726,5040418.0440519415, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514608.846596431 : 514914.2524401084, 5040112.6382082645 : 5040418.0440519415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514608.846596431,5040112.6382082645,514914.2524401084,5040418.0440519415, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,035 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[515219.6582837887 : 515525.0641274661, 5040112.6382082645 : 5040418.0440519415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=515219.6582837887,5040112.6382082645,515525.0641274661,5040418.0440519415, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,128 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,149 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514303.44075275585 : 514608.84659643326, 5040418.0440519415 : 5040723.4498956185]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514303.44075275585,5040418.0440519415,514608.84659643326,5040723.4498956185, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,157 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,157 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,156 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,152 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,181 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:45:26,195 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514303.44075275585 : 514608.84659643326, 5040112.6382082645 : 5040418.0440519415]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514303.44075275585,5040112.6382082645,514608.84659643326,5040418.0440519415, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,200 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514914.25244010985 : 515219.65828378726, 5039807.2323645875 : 5040112.6382082645]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514914.25244010985,5039807.2323645875,515219.65828378726,5040112.6382082645, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,200 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514608.846596431 : 514914.2524401084, 5039807.2323645875 : 5040112.6382082645]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514608.846596431,5039807.2323645875,514914.2524401084,5040112.6382082645, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,206 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[515219.6582837887 : 515525.0641274661, 5039807.2323645875 : 5040112.6382082645]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=515219.6582837887,5039807.2323645875,515525.0641274661,5040112.6382082645, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:45:26,206 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514303.44075275585 : 514608.84659643326, 5039807.2323645875 : 5040112.6382082645]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 256
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d]
	MaxFeatures = null
	Palette = null
	RawKvp = {FORMAT=image/png, STYLES=, WIDTH=256, GIS-LAB:POINTS_STREET_MATCHED=, HEIGHT=256, LAYERS=Gis-Lab:niguarda_roads, EXCEPTIONS=application/vnd.ogc.se_inimage, TILED=true, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514303.44075275585,5039807.2323645875,514608.84659643326,5040112.6382082645, VERSION=1.1.1, SERVICE=WMS, TILESORIGIN=514600.63422608183,5040133.193081597, TRANSPARENT=true}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = true
	TilesOrigin = Point2D.Double[514600.63422608183, 5040133.193081597]
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 256
2020-01-05 16:46:05,656 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:46:05,658 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer Gis-Lab:niguarda_roads and Gis-Lab:points_street_matched
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1290)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:288)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:90)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1545)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:692)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:255)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.lang.Thread.run(Thread.java:748)
2020-01-05 16:46:17,794 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:46:17,796 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer Gis-Lab:niguarda_roads and Gis-Lab:points_street_matched
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1290)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:288)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:90)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1545)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:692)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:255)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.lang.Thread.run(Thread.java:748)
2020-01-05 16:47:08,655 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:08,659 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not find layer Gis-Lab:niguarda_roads;Gis-Lab:points_street_matched
	at org.geoserver.wms.map.GetMapKvpRequestReader.parseLayers(GetMapKvpRequestReader.java:1290)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:288)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:90)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1545)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:692)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:255)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:998)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:890)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:875)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:26)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:69)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:73)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:66)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:41)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:37)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:51)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:70)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:74)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:101)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:47)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:46)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1602)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)
	at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:152)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
	at org.eclipse.jetty.server.Server.handle(Server.java:505)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
	at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
	at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
	at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)
	at java.lang.Thread.run(Thread.java:748)
2020-01-05 16:47:12,651 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:12,718 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514600.63422608183 : 515129.71656385745, 5040133.193081597 : 5040507.017378211]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514600.63422608183,5040133.193081597,515129.71656385745,5040507.017378211, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=542, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 16:47:12,842 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:12,974 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514407.2310199423 : 515323.4485509746, 5039996.918025308 : 5040643.519459969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514407.2310199423,5039996.918025308,515323.4485509746,5040643.519459969, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:47:27,300 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:27,327 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514820.5241140745 : 515049.5766041737, 5040255.307818598 : 5040416.956841559]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514820.5241140745,5040255.307818598,515049.5766041737,5040416.956841559, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:47:28,409 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:28,498 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[513854.8759198539 : 515687.31098191836, 5039652.143459595 : 5040945.346328917]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=513854.8759198539,5039652.143459595,515687.31098191836,5040945.346328917, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 16:47:30,430 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:30,502 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[510015.45840370393 : 518219.2885860067, 5037269.234709935 : 5043058.916947966]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=510015.45840370393,5037269.234709935,518219.2885860067,5043058.916947966, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=542, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 16:47:33,682 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:33,741 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514410.6432764585 : 515327.34097567585, 5040058.856669819 : 5040705.796973173]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514410.6432764585,5040058.856669819,515327.34097567585,5040705.796973173, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=542, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 16:47:40,776 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:40,825 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514412.0029862498 : 515328.2205172821, 5040058.953587306 : 5040705.555021967]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514412.0029862498,5040058.953587306,515328.2205172821,5040705.555021967, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 16:47:41,302 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 16:47:41,382 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[508509.17501602345 : 515479.03235490667, 5037854.631086163 : 5042773.462697718]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=508509.17501602345,5037854.631086163,515479.03235490667,5042773.462697718, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=542, TRANSPARENT=true, LAYERS=Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 16:59:27,861 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:Project
2020-01-05 18:15:03,335 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-01-05 18:15:03,335 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-01-05 18:15:03,335 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-01-05 18:15:03,335 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-01-05 18:15:03,335 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-01-05 18:15:03,350 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-01-05 18:15:03,350 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-01-05 18:15:03,366 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-01-05 18:15:03,366 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-01-05 18:15:03,366 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-01-05 18:15:03,366 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-01-05 18:15:21,576 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-01-05 18:15:21,638 INFO [org.geoserver] - Loading catalog...
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'burg'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'capitals'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'dem'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'cite_lakes'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'generic'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'grass'
2020-01-05 18:15:21,748 INFO [org.geoserver] - Loaded style 'green'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'giant_polygon'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'poi'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'line'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'point'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'polygon'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'pophatch'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'rain'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'restricted'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'population'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'raster'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'simple_roads'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'simple_streams'
2020-01-05 18:15:21,763 INFO [org.geoserver] - Loaded style 'tiger_roads'
2020-01-05 18:15:21,779 INFO [org.geoserver] - Loaded default workspace Gis-Lab
2020-01-05 18:15:21,810 INFO [org.geoserver] - Loaded workspace 'Gis-Lab'
2020-01-05 18:15:21,810 INFO [org.geoserver] - Loaded workspace 'nurc'
2020-01-05 18:15:21,810 INFO [org.geoserver] - Loaded workspace 'cite'
2020-01-05 18:15:21,810 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2020-01-05 18:15:21,826 INFO [org.geoserver] - Loaded workspace 'sf'
2020-01-05 18:15:21,826 INFO [org.geoserver] - Loaded workspace 'sde'
2020-01-05 18:15:21,826 INFO [org.geoserver] - Loaded workspace 'tiger'
2020-01-05 18:15:21,826 INFO [org.geoserver] - Loaded workspace 'topp'
2020-01-05 18:15:22,311 INFO [org.geoserver] - Loaded data store 'computedLayers', enabled
2020-01-05 18:15:23,842 INFO [org.geoserver] - Loaded feature type 'niguarda_roads', enabled
2020-01-05 18:15:23,857 INFO [org.geoserver] - Loaded layer 'niguarda_roads'
2020-01-05 18:15:23,873 INFO [org.geoserver] - Loaded feature type 'points_street_matched', enabled
2020-01-05 18:15:23,873 INFO [org.geoserver] - Loaded layer 'points_street_matched'
2020-01-05 18:15:23,889 INFO [org.geoserver] - Loaded layer group 'Project'
2020-01-05 18:15:23,904 INFO [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
2020-01-05 18:15:23,951 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2020-01-05 18:15:23,951 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2020-01-05 18:15:23,951 INFO [org.geoserver] - Loaded coverage store 'mosaic', enabled
2020-01-05 18:15:23,967 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2020-01-05 18:15:23,967 INFO [org.geoserver] - Loaded layer 'mosaic'
2020-01-05 18:15:23,967 INFO [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
2020-01-05 18:15:23,982 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2020-01-05 18:15:23,982 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2020-01-05 18:15:23,982 INFO [org.geoserver] - Loaded coverage store 'img_sample2', enabled
2020-01-05 18:15:24,014 INFO [org.geoserver] - Loaded coverage 'Pk50095', enabled
2020-01-05 18:15:24,014 INFO [org.geoserver] - Loaded layer 'Pk50095'
2020-01-05 18:15:24,061 INFO [org.geoserver] - Loaded data store 'sf', enabled
2020-01-05 18:15:24,108 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2020-01-05 18:15:24,108 INFO [org.geoserver] - Loaded layer 'bugsites'
2020-01-05 18:15:24,108 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2020-01-05 18:15:24,123 INFO [org.geoserver] - Loaded layer 'roads'
2020-01-05 18:15:24,123 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2020-01-05 18:15:24,123 INFO [org.geoserver] - Loaded layer 'archsites'
2020-01-05 18:15:24,123 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2020-01-05 18:15:24,139 INFO [org.geoserver] - Loaded layer 'restricted'
2020-01-05 18:15:24,139 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2020-01-05 18:15:24,139 INFO [org.geoserver] - Loaded layer 'streams'
2020-01-05 18:15:24,139 INFO [org.geoserver] - Loaded coverage store 'sfdem', enabled
2020-01-05 18:15:24,170 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2020-01-05 18:15:24,170 INFO [org.geoserver] - Loaded layer 'sfdem'
2020-01-05 18:15:24,186 INFO [org.geoserver] - Loaded data store 'nyc', enabled
2020-01-05 18:15:24,201 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2020-01-05 18:15:24,201 INFO [org.geoserver] - Loaded layer 'poi'
2020-01-05 18:15:24,217 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2020-01-05 18:15:24,217 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2020-01-05 18:15:24,217 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2020-01-05 18:15:24,217 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2020-01-05 18:15:24,217 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2020-01-05 18:15:24,233 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2020-01-05 18:15:24,248 INFO [org.geoserver] - Loaded data store 'taz_shapes', enabled
2020-01-05 18:15:24,248 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2020-01-05 18:15:24,264 INFO [org.geoserver] - Loaded data store 'states_shapefile', enabled
2020-01-05 18:15:24,295 INFO [org.geoserver] - Loaded feature type 'states', enabled
2020-01-05 18:15:24,295 INFO [org.geoserver] - Loaded layer 'states'
2020-01-05 18:15:24,295 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2020-01-05 18:15:24,295 INFO [org.geoserver] - Loaded layer group 'spearfish'
2020-01-05 18:15:24,311 INFO [org.geoserver] - Loaded layer group 'tasmania'
2020-01-05 18:15:24,311 INFO [org.geoserver] - Read catalog in 2.662 s
2020-01-05 18:15:24,451 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-dae7a6a:16f76b449a3:-8000', enabled
2020-01-05 18:15:24,467 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-01-05 18:15:24,482 INFO [org.geoserver] - Loaded service 'wfs', enabled
2020-01-05 18:15:24,514 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-01-05 18:15:24,545 INFO [org.geoserver] - Loaded service 'WCSInfoImpl--2ed93f6f:16f71f737b5:-7ffd', enabled
2020-01-05 18:15:24,545 INFO [org.geoserver] - Loaded service 'WFSInfoImpl--2ed93f6f:16f71f737b5:-7ffc', enabled
2020-01-05 18:15:24,576 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 18:15:24,654 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 18:15:24,654 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 18:15:24,654 INFO [config.GeoserverXMLResourceProvider] - Found configuration file in gwc
2020-01-05 18:15:24,732 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-05 18:15:24,732 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: impossibile trovare la dichiarazione dell'elemento "gwcConfiguration".
2020-01-05 18:15:24,732 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-01-05 18:15:24,732 WARN [config.XMLConfiguration] - ********************************************************************************
2020-01-05 18:15:24,811 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-01-05 18:15:24,811 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-01-05 18:15:24,857 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-01-05 18:15:24,857 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-01-05 18:15:24,857 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-01-05 18:15:24,951 INFO [gwc.layer] - Loaded 25 tile layers in 87.51 ms
2020-01-05 18:15:24,967 INFO [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
2020-01-05 18:15:24,982 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-05 18:15:24,982 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir, using it as the default prefix. ***
2020-01-05 18:15:24,982 INFO [storage.DefaultStorageFinder] - ****************************************************************************************************************************************************************************************************************************************************************
2020-01-05 18:15:25,092 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-01-05 18:15:25,170 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 18:15:25,186 INFO [config.GeoserverXMLResourceProvider] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory 'C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc'.
2020-01-05 18:15:25,186 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-05 18:15:25,201 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-01-05 18:15:25,201 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-01-05 18:15:25,201 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-01-05 18:15:25,217 INFO [diskquota.DiskQuotaMonitor] - 25 layers attached to global quota 500,0 MB
2020-01-05 18:15:25,279 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-01-05 18:15:25,467 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-01-05 18:15:25,483 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-01-05 18:15:25,483 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-01-05 18:15:25,592 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-01-05 18:15:25,608 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-01-05 18:15:29,493 WARN [gce.imagemosaic] - Unable to set ordering between tiff readers spi
2020-01-05 18:15:35,884 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-01-05 18:15:35,900 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-01-05 18:15:36,197 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-01-05 18:15:36,197 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-01-05 18:16:10,429 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 18:16:10,443 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 18:17:04,868 INFO [geoserver.gwc] - Renaming GeoSeverTileLayer Gis-Lab:niguarda_roads to Gis-Lab:niguarda_roads
2020-01-05 18:17:04,896 INFO [geoserver.gwc] - Renaming GeoSeverTileLayer Gis-Lab:points_street_matched to Gis-Lab:points_street_matched
2020-01-05 18:17:04,915 INFO [geoserver.gwc] - Renaming GeoSeverTileLayer Gis-Lab:Project to Gis-Lab:Project
2020-01-05 18:17:24,574 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 18:17:24,574 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [ShapefileDirectoryEditPanel [Component id = parametersPanel]]
2020-01-05 18:18:19,617 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:roads_PLOS-computed
2020-01-05 18:18:52,780 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = up]]' with markupid: 'id376' not rendered because it was already removed from page
2020-01-05 18:18:52,780 WARN [page.XmlPartialPageUpdate] - Component '[ImageAjaxLink [Component id = down]]' with markupid: 'id377' not rendered because it was already removed from page
2020-01-05 18:18:57,874 INFO [gwc.layer] - Truncating TileLayer for layer group 'Gis-Lab:Project' due to a change in its layers or styles
2020-01-05 18:18:57,903 INFO [file.FileBlobStore] - C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc\Gis-Lab_Project does not exist or is not writable
2020-01-05 18:18:57,903 INFO [file.FileBlobStore] - C:\Users\gianm\OneDrive - Politecnico di Milano\Desktop\PoliMi\Magistrale\II Anno\Primo Semestre\Geographic Information System\Lab\GIS-Lab\geoserver\data_dir\gwc\Gis-Lab_Project does not exist or is not writable
2020-01-05 18:18:57,917 INFO [geoserver.gwc] - Saving GeoSeverTileLayer Gis-Lab:Project
2020-01-05 18:19:16,380 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:19:16,709 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514600.63422608183 : 515129.71656385745, 5040133.193081597 : 5040507.017378211]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514600.63422608183,5040133.193081597,515129.71656385745,5040507.017378211, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=542, LAYERS=Gis-Lab:roads_PLOS-computed}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 18:19:16,866 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:19:17,098 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514407.2310199423 : 515323.4485509746, 5039996.918025308 : 5040643.519459969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514407.2310199423,5039996.918025308,515323.4485509746,5040643.519459969, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 18:20:16,117 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:16,168 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514600.63422608183 : 515129.71656385745, 5040133.193081597 : 5040507.017378211]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 542
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32632, FORMAT=application/openlayers, BBOX=514600.63422608183,5040133.193081597,515129.71656385745,5040507.017378211, VERSION=1.1.0, SERVICE=WMS, WIDTH=768, HEIGHT=542, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
2020-01-05 18:20:16,249 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:16,318 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514407.2310199423 : 515323.4485509746, 5039996.918025308 : 5040643.519459969]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514407.2310199423,5039996.918025308,515323.4485509746,5040643.519459969, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 18:20:22,799 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:22,828 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514827.90967473434 : 514942.43686611333, 5040246.40238882 : 5040327.227568153]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514827.90967473434,5040246.40238882,514942.43686611333,5040327.227568153, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 18:20:24,848 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:24,900 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514767.5144761555 : 514996.5688589136, 5040210.761765461 : 5040372.412124127]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514767.5144761555,5040210.761765461,514996.5688589136,5040372.412124127, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 18:20:26,771 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:26,838 INFO [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:3333/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[514874.436346232 : 514904.5593835478, 5040306.946711346 : 5040337.0697486615]
 layers: Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched
 styles: line,line,point
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:32632, BBOX=514874.436346232,5040306.946711346,514904.5593835478,5040337.0697486615, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
2020-01-05 18:20:27,608 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:27,659 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[513906.0324647489 : 515753.8017927993, 5039422.731961871 : 5040726.756669948]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=513906.0324647489,5039422.731961871,515753.8017927993,5040726.756669948, VERSION=1.1.1, STYLES=, WIDTH=768, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
2020-01-05 18:20:28,694 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-01-05 18:20:28,729 INFO [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:3333/geoserver/
	Bbox = SRSEnvelope[514482.38948928483 : 515398.6070203171, 5039854.952027662 : 5040501.553462323]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 32N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 9.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32632"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 543
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@49f3e49c, org.geoserver.wms.MapLayerInfo@4686420d, org.geoserver.wms.MapLayerInfo@7e8438c6]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, FORMAT=image/png, REQUEST=GetMap, SRS=EPSG:32632, BBOX=514482.38948928483,5039854.952027662,515398.6070203171,5040501.553462323, VERSION=1.1.1, STYLES=, WIDTH=769, SERVICE=WMS, HEIGHT=543, TRANSPARENT=true, LAYERS=Gis-Lab:roads_PLOS-computed,Gis-Lab:niguarda_roads,Gis-Lab:points_street_matched}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32632
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=line], StyleImpl[ name=line], StyleImpl[ name=point]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
2020-01-05 18:35:09,852 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-01-05 18:35:09,852 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-01-05 18:35:09,852 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-01-05 18:35:09,852 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-01-05 18:35:09,852 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-01-05 18:35:09,867 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-01-05 18:35:09,867 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-01-05 18:35:09,867 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-01-05 18:35:09,867 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-01-05 18:35:09,867 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-01-05 18:35:09,867 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
